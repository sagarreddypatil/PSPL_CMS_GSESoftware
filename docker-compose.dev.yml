version: "3"

services:
  pocketbase:
    build:
      context: ./pocketbase
      args:
        ARCH: amd64
    ports:
      - 8093:8093
    volumes:
      - ./data/pocketbase:/pb/pb_data
      - ./pocketbase/migrations:/pb/pb_migrations
    # environment:
    #   - VIRTUAL_HOST=pb.*
    #   - VIRTUAL_PORT=8093
    restart: always

  pspiechart:
    build:
      context: ./pspiechart
      dockerfile: Dockerfile.dev
    ports:
      - 5173:5173
    volumes:
      - ./pspiechart:/app
    # environment:
    #   - VIRTUAL_HOST=pspc.*
    #   - VIRTUAL_PORT=5173
    restart: always

  sensornet-server-cpp:
    build: ./sensornet-server-cpp
    ports:
      - 3180:3180
      - 3746:3746/udp
    volumes:
      - ./data/sensornet-server-cpp:/app/data
      - ccache:/ccache
    environment:
      - CCACHE_DIR=/ccache
    restart: always

volumes:
  ccache:

  # influxdb:
  #   image: influxdb:2.7.3
  #   ports:
  #     - 8086:8086
  #   volumes:
  #     - ./data/influxdb:/var/lib/influxdb2
  #   environment:
  #     - DOCKER_INFLUXDB_INIT_MODE=setup
  #     - DOCKER_INFLUXDB_INIT_USERNAME=admin
  #     - DOCKER_INFLUXDB_INIT_PASSWORD=super-secret-influx-pwd
  #     - DOCKER_INFLUXDB_INIT_ORG=psp-liquids
  #     - DOCKER_INFLUXDB_INIT_BUCKET=sensornet
  #     - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=super-secret-influx-token
  #   restart: always

  # sensornet-server:
  #   build:
  #     context: ./sensornet-server
  #     dockerfile: Dockerfile.dev
  #   environment:
  #     - INFLUXDB_URL=http://influxdb:8086
  #     - INFLUXDB_ORG=psp-liquids
  #     - INFLUXDB_BUCKET=sensornet
  #     - INFLUXDB_TOKEN=super-secret-influx-token
  #     - DB_PATH=/data

  #     # - VIRTUAL_HOST=sensornet.*
  #     # - VIRTUAL_PORT=8080
  #   volumes:
  #     - ./data/sensornet-server:/data
  #     - ./sensornet-server:/app
  #   ports:
  #     - 3180:3180
  #     - 3746:3746/udp
  #   restart: always

  # cmdnet-server:
  #   build:
  #     context: ./cmdnet-server
  #     dockerfile: Dockerfile.dev
  #   environment:
  #     - DB_PATH=/data
  #     - VIRTUAL_HOST=cmdnet.*
  #     - VIRTUAL_PORT=8080
  #   volumes:
  #     - ./cmdnet-server:/app
  #   ports:
  #     - 8081:8080
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway" # testing ONLY!, lets the container access the host machine
